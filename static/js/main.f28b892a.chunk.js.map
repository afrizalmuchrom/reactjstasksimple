{"version":3,"sources":["Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","display","justifyContent","Home","iam","classes","Sosmed","sosmed","map","value","href","Button","size","color","startIcon","Card","CardActionArea","CardMedia","component","alt","height","image","title","CardContent","Typography","gutterBottom","variant","name","desc","CardActions","className","width","position","bottom","atas","flexGrow","paddingBottom","paper","textAlign","Header","Infobar","task","TaskAddr","setTasks","tasknum","useState","currentValue","setCurrent","noValidate","autoComplete","TextField","id","label","defaultValue","helperText","onChange","event","target","style","marginRight","disabled","onClick","newvale","message","length","handleAdd","ListTask","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","update","filter","taskid","handleDelete","TaskList","dat","TaskApp","tasks","React","List","MenuAtas","nama","AppBar","Toolbar","MenuBawah","setValue","BottomNavigation","newValue","showLabels","textDecoration","to","BottomNavigationAction","icon","About","Urlr","currentIam","Fragment","CssBaseline","Container","maxWidth","backgroundColor","Grid","container","spacing","alignItems","justify","item","Paper","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f28b892a.chunk.js","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display:'flex', justifyContent:'center' \r\n      \r\n  \r\n    },\r\n   \r\n  });\r\n  \r\n\r\nconst Home = ({iam}) => {\r\n    const classes = useStyles();\r\n\r\n    const Sosmed = () => {\r\n        return iam.sosmed.map((value) =>\r\n        <a href={value[1]}> \r\n        <Button size=\"small\" color=\"primary\"  startIcon={value[0]}>\r\n        </Button>\r\n      \r\n        </a>\r\n      );\r\n    }\r\n\r\n\r\n        return (\r\n          <Card>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://i.ibb.co/5K6ZwJ0/iamfoto.png\"\r\n                title=\"Iam\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {iam.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {iam.desc}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className={classes.root} >\r\n             \r\n              <Sosmed />\r\n              \r\n            </CardActions>\r\n          </Card>\r\n        );\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport Home from './Home';\n\n\n//class component##################################\n// class App extends React.Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {\n//       name: 'Jonih',\n//       currname: ''\n//     }\n\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n  \n//   handleChange(event){\n//     this.setState({\n//       currname: event.target.value\n//     })\n//   }\n\n//   handleSubmit(){\n//     this.setState({\n//       name:this.state.currname\n//     })\n//   }\n\n//   render() {\n//     return <>\n  \n\n//       <h1>nama saya  {this.state.name}</h1>\n//       <input type='text' onChange={this.handleChange} ></input>\n//       <button onClick={this.handleSubmit}>Ubah</button>\n\n//     </>\n//   }\n// }\n\n//functional component###############################\n// const App = () => {\n//   const [name, setName] = useState('anti');\n//   const [currname, setCurrname] = useState('');\n\n//   const handleChange = (event) => {\n\n//     setCurrname(event.target.value);\n//   }\n\n//   const handleSubmit = () => {\n//     setName(currname);\n//   }\n\n\n//   return <>\n//       <h1>nama saya  {name}</h1>\n//       <input type='text' onChange={handleChange} ></input>\n//       <button onClick={handleSubmit}>Ubah</button>\n\n//     </>\n// }\n\n//coba props dan state################################\n// const ComponentWithProps = ({color}) => {\n//   return <div style={{ backgroundColor:color, color:'white'}} > Warna {color}</div>\n// }\n// const App = () => {\n\n\n//   return <>\n\n// <ComponentWithProps color='black' />\n\n//   </>\n// }\n\n// TUGAS  class component##################################\n\nconst Data = [\n  {\n    message:'Cari nasi',\n    id:1\n  },\n  {\n    message:'Cari uang',\n    id:2\n  }\n]\n\nconst useStyles = makeStyles({\n  root: {\n    width: 600,\n    position: 'fixed',\n    bottom: 0,\n    \n\n  },\n  atas:{\n    flexGrow: 1,\n    paddingBottom:5,\n  },\n  paper: {\n  \n    textAlign: 'center',\n    width: 350,\n   \n  }\n});\n\n\nconst Header = () => {\n  return <>\n\n  <h1>Task Today</h1>\n\n  </>\n}\n\nconst Infobar = ({task}) => {\n  return <>\n<p>Ada {task} Task yang harus dikerjakan.</p>\n\n  </>\n}\n\nconst TaskAddr = ({setTasks,tasknum}) => {\n  const [currentValue, setCurrent] = useState('');\n\n  const handleAdd = () => {\n    const newvale = \n      {\n        message:currentValue,\n        id:tasknum.length+1\n      }\n\n    setTasks([...tasknum,newvale]);\n  }\n  return <>\n  <div>\n  {/* <input type=\"text\" onChange={event => setCurrent(event.target.value)}></input> */}\n  {/* <Button disabled={currentValue === ''} color=\"primary\" onClick={() => handleAdd()}>Tambah</Button> */}\n\n  <form  noValidate autoComplete=\"off\">\n        <TextField\n          id=\"outlined-helperText\"\n          label=\"Helper text\"\n          defaultValue=\"Apaya...\"\n          helperText=\"isi catatan kamu\"\n          variant=\"outlined\"\n          onChange={event => setCurrent(event.target.value)}\n          style={{marginRight:5}}\n        />\n\n        <Button disabled={currentValue === ''} size=\"small\" startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick={() => handleAdd()}>Tambah</Button>\n\n    </form>\n  </div>\n  </>\n}\n\nconst ListTask = ({message,id,setTasks,task}) => {\n\n  const handleDelete = () => {\n    const update = task.filter(taskid => taskid.id !== id);\n    setTasks(update);\n\n  }\n  return <>\n  <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <FolderIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={message}\n        />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete()}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n\n  \n  </>\n}\n\nconst TaskList = ({dat,setTasks}) => {\n  return dat.map(task => {\nreturn <ListTask message={task.message} id={task.id} setTasks={setTasks} task={dat}/>\n  })\n}\n\nconst TaskApp = () => {\n  const [tasks, setTasks] = useState([]);\n  const classes = useStyles();\n  const [secondary, setSecondary] = React.useState(false);\n\n  return <div className={classes.task}>\n\n  <Header />\n  <Infobar task={3} />\n  <TaskAddr setTasks={setTasks} tasknum={tasks}/>\n  <List>\n    \n    <TaskList dat={tasks} setTasks={setTasks}/>\n  \n  </List>\n\n\n\n  </div>\n}\n\nconst App = () => {\n  return  <TaskApp />\n\n      \n}\n\n\n\nconst MenuAtas = ({nama}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.atas}>\n \n    <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {nama}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n      )\n}\n\nconst MenuBawah = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  return <>\n          <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n          >\n          <Link style={{ color: 'inherit', textDecoration: 'inherit'}} to=\"/\"><BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} /></Link>\n          <Link style={{ color: 'inherit', textDecoration: 'inherit'}} to=\"/aplikasi\"><BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} /></Link>\n          <Link style={{ color: 'inherit', textDecoration: 'inherit'}} to=\"/about\"><BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} /></Link>\n          </BottomNavigation>\n  </>\n}\n\n\n\n\nconst Urlr = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n \n  const [currentIam, setIam] = useState({\n    name : 'Afrizal Muchrom',\n    desc : 'find me in',\n    sosmed : [\n      [<FacebookIcon />,'http://facebook.com/izalinus.m'],\n      [<TwitterIcon />,'http://twitter.com/thejale'],\n      [<InstagramIcon />,'http://instagram.com/izalinus'],\n      [<GitHubIcon />,'http://github.com/afrizalmuchrom'],\n    ]\n      \n    \n  });\n\n  return (\n    <Router>\n      <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} >\n        \n            <MenuAtas nama={currentIam.name}/>\n            <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\n\n              <Grid item >\n                <Paper className={classes.paper} >\n                  <Switch>\n                    <Route path=\"/aplikasi\">\n                    <TaskApp />\n                    </Route>\n                    <Route path=\"/about\">\n                      <About />\n                    </Route>\n                    <Route path=\"/\">\n                      <Home iam={currentIam} />\n                    </Route>\n                  </Switch>\n                </Paper>\n              </Grid>\n\n            <MenuBawah />\n            </Grid>\n\n        </Typography>\n      </Container>\n      </React.Fragment>\n    </Router>\n  );\n}\n\n\nconst About= () => {\n\n  const Getloc = () => {\n\n    navigator.geolocation.getCurrentPosition(function(position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      return position.coords.latitude\n    });\n  }\n\n  \n    return (\n      <div>\n        <h4>Your Current Location </h4>\n       \n      </div>\n    );\n  \n\n}\n\nexport default Urlr;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}